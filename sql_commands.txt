-- SQL Commands for Table Creation
-- Order: Based on entity relationships and foreign key dependencies

-- 1. Create USERS table (no foreign key dependencies)
CREATE TABLE USERS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EMAIL VARCHAR2(255) UNIQUE NOT NULL,
    CREATEDAT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 2. Create QUOTES table (depends on USERS)
CREATE TABLE QUOTES (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    QUOTENUMBER VARCHAR2(255) UNIQUE NOT NULL,
    EMAIL VARCHAR2(255) NOT NULL,
    COVERAGELEVEL NUMBER,
    LIABILITYCOVERAGE VARCHAR2(255),
    LIQUORLIABILITY NUMBER(1) DEFAULT 0,
    COVIDDISCLOSURE NUMBER(1),
    SPECIALACTIVITIES NUMBER(1),
    TOTALPREMIUM FLOAT,
    BASEPREMIUM FLOAT,
    LIABILITYPREMIUM FLOAT,
    LIQUORLIABILITYPREMIUM FLOAT,
    STATUS VARCHAR2(20) DEFAULT 'STEP1',
    SOURCE VARCHAR2(20) DEFAULT 'CUSTOMER',
    ISCUSTOMERGENERATED NUMBER(1) DEFAULT 0,
    CONVERTEDTOPOLICY NUMBER(1) DEFAULT 0,
    EMAILSENT NUMBER(1) DEFAULT 0,
    EMAILSENTAT TIMESTAMP,
    RESIDENTSTATE VARCHAR2(255),
    CREATEDAT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATEDAT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    USERID NUMBER NOT NULL,
    CONSTRAINT FK_QUOTES_USER FOREIGN KEY (USERID) REFERENCES USERS(ID)
);

-- Create indexes for QUOTES
CREATE INDEX IDX_QUOTES_USERID ON QUOTES(USERID);
CREATE INDEX IDX_QUOTES_STATUS ON QUOTES(STATUS);
CREATE INDEX IDX_QUOTES_SOURCE ON QUOTES(SOURCE);
CREATE INDEX IDX_QUOTES_CONVERTEDTOPOLICY ON QUOTES(CONVERTEDTOPOLICY);

-- 3. Create EVENTS table (depends on QUOTES)
CREATE TABLE EVENTS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EVENTTYPE VARCHAR2(255) NOT NULL,
    EVENTDATE TIMESTAMP NOT NULL,
    MAXGUESTS VARCHAR2(255) NOT NULL,
    HONOREE1FIRSTNAME VARCHAR2(255),
    HONOREE1LASTNAME VARCHAR2(255),
    HONOREE2FIRSTNAME VARCHAR2(255),
    HONOREE2LASTNAME VARCHAR2(255),
    QUOTEID NUMBER UNIQUE,
    POLICYID NUMBER UNIQUE,
    CONSTRAINT FK_EVENTS_QUOTE FOREIGN KEY (QUOTEID) REFERENCES QUOTES(ID)
);

-- 4. Create POLICY_HOLDERS table (depends on QUOTES)
CREATE TABLE POLICY_HOLDERS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FIRSTNAME VARCHAR2(255) NOT NULL,
    LASTNAME VARCHAR2(255) NOT NULL,
    PHONE VARCHAR2(255) NOT NULL,
    RELATIONSHIP VARCHAR2(255),
    HEARABOUTUS VARCHAR2(255),
    ADDRESS VARCHAR2(255) NOT NULL,
    COUNTRY VARCHAR2(255) NOT NULL,
    CITY VARCHAR2(255) NOT NULL,
    STATE VARCHAR2(255),
    ZIP VARCHAR2(255),
    LEGALNOTICES NUMBER(1),
    COMPLETINGFORMNAME VARCHAR2(255),
    QUOTEID NUMBER UNIQUE,
    POLICYID NUMBER UNIQUE,
    CONSTRAINT FK_POLICY_HOLDERS_QUOTE FOREIGN KEY (QUOTEID) REFERENCES QUOTES(ID)
);

-- 5. Create POLICIES table (depends on QUOTES)
CREATE TABLE POLICIES (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    POLICYNUMBER VARCHAR2(255) UNIQUE NOT NULL,
    PDFURL VARCHAR2(255),
    EMAILSENT NUMBER(1) DEFAULT 0,
    EMAILSENTAT TIMESTAMP,
    CREATEDAT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATEDAT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    QUOTEID NUMBER UNIQUE,
    CONSTRAINT FK_POLICIES_QUOTE FOREIGN KEY (QUOTEID) REFERENCES QUOTES(ID)
);

-- 6. Create VENUES table (depends on EVENTS)
CREATE TABLE VENUES (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(255) NOT NULL,
    ADDRESS1 VARCHAR2(255) NOT NULL,
    ADDRESS2 VARCHAR2(255),
    COUNTRY VARCHAR2(255) NOT NULL,
    CITY VARCHAR2(255) NOT NULL,
    STATE VARCHAR2(255),
    ZIP VARCHAR2(255),
    LOCATIONTYPE VARCHAR2(255),
    CEREMONYLOCATIONTYPE VARCHAR2(255),
    INDOOROUTDOOR VARCHAR2(255),
    VENUEASINSURED NUMBER(1) DEFAULT 0,
    RECEPTIONLOCATIONTYPE VARCHAR2(255),
    RECEPTIONINDOOROUTDOOR VARCHAR2(255),
    RECEPTIONVENUENAME VARCHAR2(255),
    RECEPTIONVENUEADDRESS1 VARCHAR2(255),
    RECEPTIONVENUEADDRESS2 VARCHAR2(255),
    RECEPTIONVENUECOUNTRY VARCHAR2(255),
    RECEPTIONVENUECITY VARCHAR2(255),
    RECEPTIONVENUESTATE VARCHAR2(255),
    RECEPTIONVENUEZIP VARCHAR2(255),
    RECEPTIONVENUEASINSURED NUMBER(1) DEFAULT 0,
    BRUNCHLOCATIONTYPE VARCHAR2(255),
    BRUNCHINDOOROUTDOOR VARCHAR2(255),
    BRUNCHVENUENAME VARCHAR2(255),
    BRUNCHVENUEADDRESS1 VARCHAR2(255),
    BRUNCHVENUEADDRESS2 VARCHAR2(255),
    BRUNCHVENUECOUNTRY VARCHAR2(255),
    BRUNCHVENUECITY VARCHAR2(255),
    BRUNCHVENUESTATE VARCHAR2(255),
    BRUNCHVENUEZIP VARCHAR2(255),
    BRUNCHVENUEASINSURED NUMBER(1) DEFAULT 0,
    REHEARSALLOCATIONTYPE VARCHAR2(255),
    REHEARSALINDOOROUTDOOR VARCHAR2(255),
    REHEARSALVENUENAME VARCHAR2(255),
    REHEARSALVENUEADDRESS1 VARCHAR2(255),
    REHEARSALVENUEADDRESS2 VARCHAR2(255),
    REHEARSALVENUECOUNTRY VARCHAR2(255),
    REHEARSALVENUECITY VARCHAR2(255),
    REHEARSALVENUESTATE VARCHAR2(255),
    REHEARSALVENUEZIP VARCHAR2(255),
    REHEARSALVENUEASINSURED NUMBER(1) DEFAULT 0,
    REHEARSALDINNERVENUENAME VARCHAR2(255),
    REHEARSALDINNERVENUEADDRESS1 VARCHAR2(255),
    REHEARSALDINNERVENUEADDRESS2 VARCHAR2(255),
    REHEARSALDINNERVENUECOUNTRY VARCHAR2(255),
    REHEARSALDINNERVENUECITY VARCHAR2(255),
    REHEARSALDINNERVENUESTATE VARCHAR2(255),
    REHEARSALDINNERVENUEZIP VARCHAR2(255),
    REHEARSALDINNERVENUEASINSURED NUMBER(1) DEFAULT 0,
    REHEARSALDINNERLOCATIONTYPE VARCHAR2(255),
    REHEARSALDINNERINDOOROUTDOOR VARCHAR2(255),
    EVENTID NUMBER UNIQUE NOT NULL,
    CONSTRAINT FK_VENUES_EVENT FOREIGN KEY (EVENTID) REFERENCES EVENTS(ID)
);

-- 7. Create PAYMENTS table (depends on QUOTES and POLICIES)
CREATE TABLE PAYMENTS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    AMOUNT NUMBER(10,2) NOT NULL,
    STATUS VARCHAR2(50) NOT NULL,
    METHOD VARCHAR2(50) NOT NULL,
    REFERENCE VARCHAR2(100),
    CREATEDAT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATEDAT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    QUOTEID NUMBER,
    POLICYID NUMBER,
    CONSTRAINT FK_PAYMENTS_QUOTE FOREIGN KEY (QUOTEID) REFERENCES QUOTES(ID),
    CONSTRAINT FK_PAYMENTS_POLICY FOREIGN KEY (POLICYID) REFERENCES POLICIES(ID)
);

-- Create indexes for PAYMENTS
CREATE INDEX IDX_PAYMENTS_STATUS ON PAYMENTS(STATUS);
CREATE INDEX IDX_PAYMENTS_QUOTEID ON PAYMENTS(QUOTEID);

-- 8. Create POLICY_VERSIONS table (depends on POLICIES)
CREATE TABLE POLICY_VERSIONS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    DATA CLOB NOT NULL,
    CREATEDAT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    POLICYID NUMBER NOT NULL,
    CONSTRAINT FK_POLICY_VERSIONS_POLICY FOREIGN KEY (POLICYID) REFERENCES POLICIES(ID) ON DELETE CASCADE
);

-- Create index for POLICY_VERSIONS
CREATE INDEX IDX_POLICY_VERSIONS_POLICYID ON POLICY_VERSIONS(POLICYID);

-- Add remaining foreign key constraints after all tables are created
ALTER TABLE EVENTS ADD CONSTRAINT FK_EVENTS_POLICY FOREIGN KEY (POLICYID) REFERENCES POLICIES(ID);
ALTER TABLE POLICY_HOLDERS ADD CONSTRAINT FK_POLICY_HOLDERS_POLICY FOREIGN KEY (POLICYID) REFERENCES POLICIES(ID); 