// This file is a server component. Do not use client-only context providers here.
// Use context providers in client layouts or pages instead.
import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
// import { ReactScan } from "@/components/ReactScan";
import Script from 'next/script'; // âœ… Server-safe way to inject scripts
import { ClerkProvider } from '@clerk/nextjs';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Wedevent',
  description: 'Generated by create next app',
  icons: {
    icon: '/logo.png', // Path relative to the public folder
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
      <html lang="en">
        {/* <ReactScan /> */}
        <head>
          {/* Google Analytics */}
          <Script
            src="https://www.googletagmanager.com/gtag/js?id=G-GYX7KNZCXK"
            strategy="afterInteractive"
          />
          <Script
            id="google-analytics"
            strategy="afterInteractive"
            dangerouslySetInnerHTML={{
              __html: `
                window.dataLayer = window.dataLayer || [];
                function gtag(){dataLayer.push(arguments);}
                gtag('js', new Date());
                gtag('config', 'G-GYX7KNZCXK');
              `,
            }}
          />
        </head>
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased bg-white`}>
          {/* QuoteProvider must be used in a client layout or page, not here */}
          {children}
        </body>
      </html>
    </ClerkProvider>
  );
}
